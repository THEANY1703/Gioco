package com.company;


import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;


public class Play extends Canvas implements Runnable, KeyListener {

    public BufferedWriter  scrittore;
    File pino = new File("C:/Users/giorg/Desktop/Javaproject/Coordinate.txt");

    private static int Alt = 400;
    private static int larg = 400;

    private static String Nome_Finestra = "Project School";


    BufferedImage spirte = null;
    BufferedImage Champions = null;
    BufferedImage sfondo = null;

    private boolean giocoAttivo = false;

    private spirte ogg_spirte;


    public Play() {
        Car_risorse();
        inziagioco();
    }


    private void inziagioco() {

        ogg_spirte = new spirte(spirte, 30, 30, 40, 40);

        ogg_spirte.start();

    }

    private void Car_risorse() {
        immagini loader = new immagini();

        sfondo = loader.caricaImmagine("/Immagini/Sfondo1.png");

        spirte = loader.caricaImmagine("/Immagini/Balotelli1.png");

        Champions = loader.caricaImmagine("/Immagini/Champions.png");


        System.out.println("Risorse caricate correttamente");


    }

    /*

    public Component disegnasfondo() {
        immagini loader = new immagini();
        sfondo = loader.caricaImmagine("/Immagini/Sfondo.png");

        BufferStrategy buffern = this.getBufferStrategy();

        if (buffern == null) {

            createBufferStrategy(2);
            return null;

        }

        Graphics g = buffern.getDrawGraphics();
        g.drawImage(sfondo, 0, 0, larg, Alt, this);

        g.dispose();

        buffern.show();
        return null;
    }
*/
    private void Disegna() {

        BufferStrategy buffer = this.getBufferStrategy();

        if (buffer == null) {

            createBufferStrategy(2);
            return;

        }
        Graphics g = buffer.getDrawGraphics();


        g.drawImage(sfondo, 0, 0, larg, Alt, this);

        ogg_spirte.disegna(g);

        g.dispose();

        buffer.show();

    }

    public void run() {
        giocoAttivo = true;

        try {
            scrittore = new BufferedWriter(new FileWriter("C:/Users/giorg/Desktop/Javaproject/Coordinate.txt"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        while (giocoAttivo) {
            Disegna();
        }

    }

    /*public int get_spirtex(){

        int x_temp= ogg_spirte.getX();
        return x_temp;

    }


    public int getX() {
        return x;
    }


    public int getY() {
        return y;
    }

    public int get_spirtey(){

        int y_temp = ogg_spirte.getY();


        return y_temp;

    }*/

    /*public void semuscemi(){
        try {


            scrittore.write("(x!="+ogg_spirte.getX() + ") && (y!=" + ogg_spirte.getY()+") &&");
            scrittore.newLine();
            scrittore.flush();



            System.out.println("Mbare sei un folle ho scritto nel file");
        } catch (IOException a) {
            System.out.println("An error occurred.");
            a.printStackTrace();

        }

    }*/
    @Override
    public void keyTyped(KeyEvent e) {

    }

    public void keyPressed(KeyEvent e) {

        //questa forza che ci unisce Ã¨ pura e semplice follia


       System.out.println(ogg_spirte.getX()+" "+ogg_spirte.getY());



        int keycode = e.getKeyCode();

        switch (keycode) {
            case KeyEvent.VK_W:
                ogg_spirte.Movimento_su();
                break;

            case KeyEvent.VK_S:
                ogg_spirte.Movimento_giu();
                break;

            case KeyEvent.VK_D:
                ogg_spirte.Movimento_ds();
                break;

            case KeyEvent.VK_A:
                ogg_spirte.Movimento_sn();
                break;


        }
        //semuscemi();

    }

    @Override
    public void keyReleased(KeyEvent e) {

    }


}
